<Page x:Class="NsisoLauncher.Views.Pages.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:NsisoLauncher.Views.Pages"
      xmlns:vm="clr-namespace:NsisoLauncher.ViewModels.Pages"
      xmlns:userControl="clr-namespace:NsisoLauncher.Views.Controls"
      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:media="https://github.com/JohanLarsson/Gu.Wpf.Media"
      xmlns:converters="clr-namespace:NsisoLauncher.Utils"
      xmlns:utils="clr-namespace:NsisoLauncher.Utils"
      xmlns:itemUtils="clr-namespace:MahAppsMetroHamburgerMenuNavigation.ViewModels"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="MainPage">
    <Page.Resources>
        <converters:VisualBrushTargetConverter x:Key="visualBrushTargetConverter"/>
        <converters:OppositeBooleanToVisibilityConverter x:Key="oppositeBooleanToVisibilityConverter"/>
        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type itemUtils:MenuItem}">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False" />
                <TextBlock Grid.Column="1"
                   VerticalAlignment="Center"
                   FontSize="16"
                   Text="{Binding Label}" />
            </Grid>
        </DataTemplate>

        <Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
            <Setter Property="ClipToBounds" Value="True" />
            <!--#region 动画-->
            <!--<Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <controls:TransitioningContentControl Content="{Binding}"
                                                  RestartTransitionOnContentChange="True"
                                                  Transition="Custom">
                            <controls:TransitioningContentControl.CustomVisualStates>
                                <VisualState x:Name="CustomTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        -->
            <!--<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                            <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1"
                                            KeyTime="00:00:00.300"
                                            Value="0" />
                                        </DoubleAnimationUsingKeyFrames>-->
            <!--

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="PreviousContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </controls:TransitioningContentControl.CustomVisualStates>
                        </controls:TransitioningContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>-->
            <!--#endregion-->
        </Style>
        <vm:MainPageViewModel x:Key="mainpageVM"/>
    </Page.Resources>
    <Page.DataContext>
        <StaticResource ResourceKey="mainpageVM"/>
    </Page.DataContext>
    <Grid>
        <controls:HamburgerMenu x:Name="HamburgerMenuControl" DockPanel.Dock="Left"
                          IsPaneOpen="False"
                          ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                          ItemTemplate="{StaticResource MenuItemTemplate}"
                          OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                          Style="{StaticResource MahApps.Styles.HamburgerMenu}"
                          PaneBackground="{DynamicResource MahApps.Brushes.SystemControlBackgroundChromeMedium}"
                          PaneForeground="{DynamicResource MahApps.Brushes.SystemControlForegroundBaseMediumHigh}"
                          SelectedIndex="{Binding SelectedIndex}" SelectedOptionsIndex="{Binding SelectedOptionsIndex}">

            <controls:HamburgerMenu.ItemsSource>
                <controls:HamburgerMenuItemCollection>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=HomeSolid}" Label="开始游戏" NavigationDestination="Views/Pages/LaunchPage.xaml"/>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=CubesSolid}" Label="仓库" NavigationDestination="Views/Pages/ExtendPage.xaml"/>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=PlusSolid}" Label="添加安装" NavigationDestination="Views/Pages/AdditionPage.xaml"/>
                </controls:HamburgerMenuItemCollection>
            </controls:HamburgerMenu.ItemsSource>
            <controls:HamburgerMenu.OptionsItemsSource>
                <controls:HamburgerMenuItemCollection>
                    <itemUtils:MenuItem  Label="下载" NavigationDestination="Views/Pages/DownloadPage.xaml">
                        <itemUtils:MenuItem.Icon>
                            <controls:Badged Badge="{Binding DownloadTaskCount, Source={StaticResource mainpageVM}}" Padding="0,5">
                                <iconPacks:FontAwesome Kind="CloudDownloadAltSolid"/>
                            </controls:Badged>
                        </itemUtils:MenuItem.Icon>
                    </itemUtils:MenuItem>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=CogSolid}" Label="设置" NavigationDestination="Views/Pages/SettingPage.xaml"/>
                    <itemUtils:MenuItem Icon="{iconPacks:FontAwesome Kind=UserSolid}" Label="用户" NavigationDestination="Views/Pages/UserPage.xaml"/>
                </controls:HamburgerMenuItemCollection>
            </controls:HamburgerMenu.OptionsItemsSource>
        </controls:HamburgerMenu>
    </Grid>
</Page>
